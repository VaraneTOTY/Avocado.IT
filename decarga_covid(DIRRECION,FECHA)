using Printf, CSV, JuliaDB, Distributions, OnlineStats, DataFrames, Dates, Plots, PyCall, HTTP, ZipFile, Logging, TerminalLoggers, Dates, XLSX

#Modulo para descomprimir archivos de python
zipfile = pyimport("zipfile")

#Barra de progreso
global_logger(TerminalLogger(right_justify=120))

#Dirrecion inf. covid mas actualizada http://datosabiertos.salud.gob.mx/gobmx/salud/datos_abiertos/datos_abiertos_covid19.zip
#Dirreccion comprimido para test https://file-examples-com.github.io/uploads/2017/02/zip_2MB.zip
covidActual = "http://datosabiertos.salud.gob.mx/gobmx/salud/datos_abiertos/datos_abiertos_covid19.zip" 

#Descomprime archivo, regresa la direccion del archivo
#unzip(ARCHIVO_COMPRIMIDO, DIRECCION_DESCOMPRIMIR)
function unzip(rar,pathS="")
    local pathC = ""
    rzip = zipfile.ZipFile(rar)
    for i in rzip.namelist()
        path = joinpath(pathS,i)
        if isempty(pathC)
                pathC = path
        end
        rzip.extract(i, pathS)
    end
    rzip.close()
    rm(rar, force=true, recursive=true)
    return pathC
end

#Regresa string URL de descarga 
#links_covid(FECHA)
function links_covid(f="")
    ff = DateFormat("dd-mm-yyyy")
    fe = Date(f,ff)
    if string(Dates.year(fe)) == "2020"
        return covidLink = string("http://datosabiertos.salud.gob.mx/gobmx/salud/datos_abiertos/historicos/",
            @sprintf("%02d",Dates.month(fe)),"/datos_abiertos_covid19_",
            @sprintf("%02d",Dates.day(fe)),".",
            @sprintf("%02d",Dates.month(fe)),".2020.zip")
    elseif string(Dates.year(fe)) == "2021"
        return covidLink = string("http://datosabiertos.salud.gob.mx/gobmx/salud/datos_abiertos/historicos/2021/",
            @sprintf("%02d",Dates.month(fe)),"/datos_abiertos_covid19_",
            @sprintf("%02d",Dates.day(fe)),".",
            @sprintf("%02d",Dates.month(fe)),".2021.zip")
    end
end

#Descarga archivo covid, regresa la dirrecion del archivo
#descargar_covid(DIRECCION,FECHA), si no se especifica DIRECCION el archivo se guarda en la carpeta actual, si no se especifica FECHA se obtienen los datos mas actualizados
#FECHA formato dia-mes-año ejem."15-1-2020"
function descargar_covid(path="",f="")
    if isempty(path)
        path = pwd()
    end
    if isempty(f)
        covidLink = covidActual
    else
        covidLink = links_Covid(f)
    end
    pathC = joinpath(path,"covid")
    rm(pathC, force=true, recursive=true)
    mkdir(pathC)
    rar = HTTP.download(covidLink, pathC)
    return unzip(rar, pathC)
end

#Datos de CONEVAL 2008 al 2018
conevalLink = "https://www.coneval.org.mx/Medicion/MP/Documents/Pobreza_18/AE_nacional_estatal_2008_2018.zip"

#Descarga los datos relevantes del CONEVAL, regresa direccion del archivo
#descargar_coneval(DIRECCION), si no se especifica DIRECCION el archivo se guarda en la carpeta actual
function descargar_coneval(path="")
    if isempty(path)
        path = pwd()
    end
    pathC = joinpath(path,"coneval")
    rm(pathC, force=true, recursive=true)
    mkdir(pathC)
    rar = HTTP.download(conevalLink, pathC)
    return unzip(rar, pathC)
end

#Datos intensidad migratoria por municipios, 2010
imLink = "http://www.omi.gob.mx/work/models/OMI/Resource/538/1/images/IIM2010_BASEMUN.xls"

#Descarga los datos del Observatorio de Migración Internacional, regresa direccion del archivo
#descargar_im(DIRECCION), si no se especifica DIRECCION el archivo se guarda en la carpeta actual
function descargar_im(path="")
    if isempty(path)
        path = pwd()
    end
    pathC = joinpath(path,"Intensidad Migratoria")
    rm(pathC, force=true, recursive=true)
    mkdir(pathC)
    rar = HTTP.download(imLink, pathC)
    return rar
end

#Combina las funciones de descarga
#descargar_datos(DIRECCION), si no se especifica DIRECCION se ocupa la carpeta actual
function descargar_datos(path="")
    if isempty(path)
        path = pwd()
    end
    pathC = joinpath(path,"Descargables")
    rm(pathC, force=true, recursive=true)
    mkdir(pathC)
    descargar_covid(pathC)
    descargar_im(pathC)
    descargar_coneval(pathC)
    return pathC
end

prueba = descargar_datos()
